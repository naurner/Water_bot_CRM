"""–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä Telegram –±–æ—Ç–∞"""
from telegram import ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime, timedelta


class Keyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""

    @staticmethod
    def get_main_menu(has_user=False, has_orders=False):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        keyboard = [['üìù –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑'], ['‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è']]

        if has_user:
            keyboard.insert(1, ['‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'])

        if has_orders:
            keyboard.insert(1, ['üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã'])

        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_guest_order_menu():
        """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –¥–ª—è –≥–æ—Å—Ç–µ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
        keyboard = [
            ['üë§ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'],
            ['üìù –ó–∞–∫–∞–∑–∞—Ç—å –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'],
            ['‚óÄÔ∏è –ù–∞–∑–∞–¥']
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_bottles_keyboard():
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±—É—Ç—ã–ª–æ–∫"""
        keyboard = [
            ['2', '3', '4'],
            ['5', '6', '7'],
            ['‚óÄÔ∏è –ù–∞–∑–∞–¥']
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_edit_data_keyboard():
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
        keyboard = [
            ['‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è'],
            ['üìû –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω'],
            ['üìç –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å'],
            ['‚óÄÔ∏è –ù–∞–∑–∞–¥']
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_date_selection_keyboard():
        """–ü–æ–ª—É—á–∏—Ç—å inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã"""
        keyboard = []
        today = datetime.now()

        for i in range(7):
            date = today + timedelta(days=i)
            date_str = date.strftime('%Y-%m-%d')

            if i == 0:
                button_text = f"–°–µ–≥–æ–¥–Ω—è ({date.strftime('%d.%m')})"
            elif i == 1:
                button_text = f"–ó–∞–≤—Ç—Ä–∞ ({date.strftime('%d.%m')})"
            else:
                button_text = date.strftime('%d.%m.%Y (%A)')

            keyboard.append([InlineKeyboardButton(button_text, callback_data=f"date_{date_str}")])

        keyboard.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")])
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_time_selection_keyboard(date_str, available_slots):
        """–ü–æ–ª—É—á–∏—Ç—å inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏"""
        keyboard = []

        if not available_slots:
            keyboard.append([InlineKeyboardButton("‚ùå –ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤", callback_data="no_slots")])
        else:
            for time_slot in available_slots:
                keyboard.append([InlineKeyboardButton(
                    f"‚è∞ {time_slot}",
                    callback_data=f"time_{time_slot}"
                )])

        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_date")])
        keyboard.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")])
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_order_actions_keyboard(order_id, can_reschedule=True):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–∫–∞–∑–æ–º"""
        keyboard = [
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"cancel_order_{order_id}")]
        ]

        if can_reschedule:
            keyboard.append([InlineKeyboardButton("‚è∞ –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∑–∞–∫–∞–∑", callback_data=f"reschedule_{order_id}")])

        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑–∞–º", callback_data="back_to_orders")])
        keyboard.append([InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")])

        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_orders_list_keyboard(orders):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤"""
        keyboard = []

        for order in orders:
            keyboard.append([InlineKeyboardButton(
                f"üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–º {order['order_id']}",
                callback_data=f"select_order_{order['order_id']}"
            )])

        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")])
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_cancel_confirmation_keyboard(order_id):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã"""
        keyboard = [
            [InlineKeyboardButton("‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"confirm_cancel_{order_id}")],
            [InlineKeyboardButton("‚ùå –ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è", callback_data=f"select_order_{order_id}")]
        ]
        return InlineKeyboardMarkup(keyboard)
